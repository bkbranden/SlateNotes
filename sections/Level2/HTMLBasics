<h1 id='html-basics'>HTML Basics</h1>
<!-- TOC -->

<ul>
<li><a href="#html-basics">HTML Basics</a>

<ul>
<li><a href="#introduction-to-html">Introduction to HTML</a></li>
<li><a href="#html-basics-1">HTML Basics</a>

<ul>
<li><a href="#html-page-structure">HTML Page Structure</a></li>
<li><a href="#tags-vs-elements">Tags vs Elements</a></li>
<li><a href="#attributes">Attributes</a></li>
<li><a href="#white-space">White Space</a></li>
</ul></li>
<li><a href="#document-heading">Document Heading</a>

<ul>
<li><a href="#tags">Tags</a></li>
</ul></li>
<li><a href="#document-body">Document Body</a>

<ul>
<li><a href="#block-vs-inline-elements">Block vs Inline Elements</a></li>
</ul></li>
<li><a href="#text-elements">Text Elements</a>

<ul>
<li><a href="#p-tag">p tag</a></li>
<li><a href="#span-tag">span tag</a></li>
<li><a href="#br-tag">br tag</a></li>
<li><a href="#heading-tags">heading tags</a></li>
<li><a href="#code-blocks">Code Blocks</a></li>
<li><a href="#lists">Lists</a></li>
</ul></li>
<li><a href="#links">Links</a></li>
<li><a href="#container-tags--page-structure">Container Tags / Page Structure</a></li>
<li><a href="#forms">Forms</a></li>
<li><a href="#tables">Tables</a></li>
<li><a href="#multimedia-elements">Multimedia Elements</a></li>
<li><a href="#iframe">Iframe</a></li>
<li><a href="#images">Images</a></li>
</ul></li>
</ul>

<!-- /TOC -->
<h2 id='introduction-to-html'>Introduction to HTML</h2>
<ul>
<li>Whole web platform never broke backwards compatability</li>
<li>Very simple and forgiving</li>
</ul>
<h2 id='html-basics-2'>HTML Basics</h2>
<ul>
<li>HTML is served to the browser in several ways:

<ul>
<li>Can be generated by server-side application and build it depending on request or session data

<ul>
<li>Ex. Rails, Laravel, or Django application</li>
</ul></li>
<li>Can be generated by Javascript client-side application on the fly</li>
<li>Stored in a file and served to a browser by a web server</li>
</ul></li>
<li>HTML is saved in .html files</li>
<li>HTML content is organized using tags

<ul>
<li>Ex. <code>&lt;p&gt; Some text &lt;/p&gt;</code></li>
</ul></li>
<li>The browser interprets these tags and then presents them in a basic way

<ul>
<li>There is no styling done by the browser without CSS</li>
<li>HTML is more concerned with how things are structured rather than how they look</li>
</ul></li>
</ul>
<h3 id='html-page-structure'>HTML Page Structure</h3>
<ul>
<li>HTML starts with the document type declaration (doctype)

<ul>
<li>Ex. <code>&lt;!DOCTYPE html&gt;</code></li>
</ul></li>
<li>Then have the html element to wrap all the tags

<ul>
<li>Ex. 
<code>
&lt;!DOCTYPE html&gt;
&lt;html&gt;
    ...
&lt;/html&gt;
</code></li>
</ul></li>
<li>Tags can either come in pairs as a opening and closing tag

<ul>
<li>Ex. <code>&lt;p&gt;Some Text&lt;/p&gt;</code></li>
</ul></li>
<li>Tags can also be self-closing, meaning that it cannot contain any text in between it

<ul>
<li>Ex. <code>&lt;img src=&quot;&quot; /&gt;</code></li>
</ul></li>
<li>In the HTML tag, there is a HEAD and BODY

<ul>
<li>Ex. 
<code>
&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        ...
    &lt;/head&gt;
    &lt;body&gt;
        ...
    &lt;/body&gt;
&lt;/html&gt;
</code></li>
</ul></li>
<li>The head contains tags that are essential to creating a webpage

<ul>
<li>Title</li>
<li>Metadata</li>
<li>CSS / JS links</li>
<li>Generally the head contains information that is not visible</li>
</ul></li>
<li>The body contains the actual content that is visible</li>
</ul>
<h3 id='tags-vs-elements'>Tags vs Elements</h3>
<ul>
<li>Tag is the type of element and the element is the whole package for that piece of the HTML page</li>
<li>Elements have a starting tag and closing tag

<ul>
<li>Starting tag</li>
<li>Text element</li>
<li>Closing tag</li>
</ul></li>
</ul>
<h3 id='attributes'>Attributes</h3>
<ul>
<li>Starting tags can have attributes in a &quot;key:value&quot; pair orientation that add additional information to the tag

<ul>
<li>Ex. <code>&lt;p class=&quot;a-class&quot;&gt;Some Text&lt;/p&gt;</code></li>
</ul></li>
<li>Common tags are:

<ul>
<li>Class - identify HTML elements by a certain class, can have multiple separated by spaces</li>
<li>Id - identify HTML elements by an Id, this has to be unique within the whole HTML document</li>
</ul></li>
</ul>
<h3 id='white-space'>White Space</h3>
<ul>
<li>In HTML, the browser parses out all of the whitespace for the content within tags

<ul>
<li>Ex. <code>&lt;p&gt;A paragraph of text&lt;/p&gt;</code>
is the same as <code>&lt;p&gt;_____ A paragraph of text&lt;/p&gt;</code></li>
<li>&quot;_&quot; is a space</li>
</ul></li>
<li>Use CSS property: white-space to change this</li>
</ul>
<h2 id='document-heading'>Document Heading</h2>
<ul>
<li>Head tag defines elements that define the document properties</li>
<li>Always written before the document body tag</li>
</ul>
<h3 id='tags'>Tags</h3>
<ul>
<li>Title

<ul>
<li>Determines the page title, what is displayed on the browser tab</li>
<li>Helps in SEO</li>
</ul></li>
<li>Script

<ul>
<li>Used to add Javascript into the page</li>
<li>Can be included inline or referring to an external JS file</li>
<li>Type attribute is set to text/javascript by default</li>
<li>Script should always be in the head tag and need to add &quot;defer&quot; attribute to make sure that the content loads before the Javascript</li>
</ul></li>
<li>Noscript

<ul>
<li>Tag used to detect if Javascript is disabled</li>
<li>If used in head, it can include link, style, and meta tags that are served if javascript is disabled</li>
<li>In the body, it can be used to render HTML elements if javascript is disabled</li>
</ul></li>
<li>Link

<ul>
<li>Tag used to set relationships between a document and other resources</li>
<li>Mainly used to link CSS stylesheets</li>
<li>Can also link to other resources than stylesheets

<ul>
<li>Ex. <code>&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; href=&quot;/index.xml&quot;&gt;</code></li>
</ul></li>
<li>Can also link to favicons and load different style sheets based on the device</li>
</ul></li>
<li>Style

<ul>
<li>Used to add styling into the document without the use of an external stylesheet</li>
</ul></li>
<li>Meta

<ul>
<li>Tag used for SEO</li>
<li>Can be used for description of the page which is what Google uses to display page information

<ul>
<li>Ex. <code>&lt;meta name=&quot;description&quot; content=&quot;Content&quot;&gt;</code></li>
</ul></li>
<li>Robots attribute tag allows the file to tell the search engines whether they should index the file, follow links on the page, etc. </li>
<li>The Viewport attribute can tell the browser to set the page width based on the device width</li>
</ul></li>
</ul>
<h2 id='document-body'>Document Body</h2>
<ul>
<li>Document body contains the elements that define the content of the document</li>
</ul>
<h3 id='block-vs-inline-elements'>Block vs Inline Elements</h3>
<ul>
<li>HTML elements are split into 2 types:

<ul>
<li>Block

<ul>
<li>When positioned in the page, it does not let any elements be next to that element to the left or right</li>
<li>These elements &quot;stack&quot; on top of each other</li>
</ul></li>
<li>Inline

<ul>
<li>Can sit next to each other and also within block elements</li>
</ul></li>
</ul></li>
<li>CSS styling properties are different for both as well

<ul>
<li>Block can have their height, width, margin, etc. changed but inline cannot</li>
</ul></li>
<li>Block elements can contain other block elements but inline elements cannot contain other inline or block elements</li>
</ul>
<h2 id='text-elements'>Text Elements</h2><h3 id='p-tag'>p tag</h3>
<ul>
<li><code>&lt;p&gt; Some Text &lt;/p&gt;</code></li>
<li>Stands for paragraph element</li>
<li>Cannot contain other paragraph elements or block elements, but can contain inline elements</li>
</ul>
<h3 id='span-tag'>span tag</h3>
<ul>
<li><code>&lt;span&gt; Some Text &lt;/span&gt;</code></li>
<li>Inline element that is used within block elements to target using CSS attributes</li>
</ul>
<h3 id='br-tag'>br tag</h3>
<ul>
<li><code>&lt;p&gt; Some text &lt;br&gt; A new line &lt;/p&gt;</code></li>
<li>This tag is an inline element that represents a line break</li>
</ul>
<h3 id='heading-tags'>heading tags</h3>
<ul>
<li>h1, h2, h3, h4, h5, h6</li>
<li><code>&lt;h1&gt; Some Text &lt;/h1&gt;</code></li>
<li>Headings are used for structuring the information of the page as h1 is most important and h6 is least important</li>
<li>Also utilized in SEOs</li>
<li>Are block elements that cannot contain any other elements except text</li>
</ul>
<h3 id='code-blocks'>Code Blocks</h3>
<ul>
<li>Code and pre tags</li>
<li><code>&lt;pre&gt;&lt;code&gt; Some Code &lt;/code&gt;&lt;/pre&gt;</code></li>
<li>Code elements are wrapped with pre tags because the code element ignores whitespace and line breaks</li>
</ul>
<h3 id='lists'>Lists</h3>
<ul>
<li>3 types of lists:

<ol>
<li>Unordered List</li>
<li>Ordered List</li>
<li>Definition Lists</li>
</ol></li>
<li>Unordered lists are creating using <code>&lt;ul&gt;</code>tag

<ul>
<li>Ex.
<code>
&lt;ul&gt;
&lt;li&gt;First&lt;/li&gt;
&lt;li&gt;Second&lt;/li&gt;
&lt;/ul&gt;
</code></li>
</ul></li>
<li>Ordered lists are the same but uses <code>&lt;ol&gt;</code> tag

<ul>
<li>Ex.
<code>
&lt;ol&gt;
&lt;li&gt;First&lt;/li&gt;
&lt;li&gt;Second&lt;/li&gt;
&lt;/ol&gt;
</code></li>
</ul></li>
<li>Definition lists are different in that it has a term and definition

<ul>
<li>Ex.
<code>
&lt;dl&gt;
&lt;dt&gt;Flavio&lt;/dt&gt;
&lt;dd&gt;The name&lt;/dd&gt;
&lt;dt&gt;Copes&lt;/dt&gt;
&lt;dd&gt;The surname&lt;/dd&gt;
&lt;/dl&gt;
</code></li>
</ul></li>
</ul>
<h2 id='links'>Links</h2>
<ul>
<li>Defined using the <code>&lt;a&gt;</code> tag</li>
<li>The destination of the link is set by the &quot;href&quot; attribute

<ul>
<li>Ex. <code>&lt;a href=&quot;https://flaviocopes.com&quot;&gt;click here&lt;/a&gt;</code></li>
</ul></li>
<li>Links work with relative URLs but have a slight nuance

<ul>
<li>If there is &quot;/&quot; prepended to the beginning of the path, the browser replaces all of the string starting from the origin with that path

<ul>
<li>Ex. <code>&lt;a href=&quot;/test&quot;&gt;click here&lt;/a&gt;</code> brings you to http://url/test if u were on http://url/other/</li>
</ul></li>
<li>If there is no &quot;/&quot; prepended, it adds the string on top of the current path

<ul>
<li>Ex. <code>&lt;a href=&quot;test&quot;&gt;click here&lt;/a&gt;</code> brings you to http://url/other/test if you were on http://url/other/</li>
</ul></li>
</ul></li>
</ul>
<h2 id='container-tags-page-structure'>Container Tags / Page Structure</h2>
<ul>
<li>These tags are used to separate the sections of the document into structured areas</li>
<li>The main ones used are:

<ul>
<li>article</li>
<li>section</li>
<li>div</li>
<li>nav</li>
<li>aside</li>
<li>header</li>
<li>main</li>
<li>footer</li>
</ul></li>
<li>article is used to specify a section can be independent from the other sections

<ul>
<li>Inside should have h1-h6 tag and content</li>
</ul></li>
<li>section is used to specify a section of the document

<ul>
<li>Inside should have a heading tag (h1-h6) and the body</li>
</ul></li>
<li>div is the most popular one which is a generic container element

<ul>
<li>Often paired with class and id attributes to use for styling</li>
</ul></li>
</ul>
<h2 id='forms'>Forms</h2>
<ul>
<li>Forms are the way that you send requests and interact with a page for HTML</li>
<li>By default, sending a form will take you to another URL or reload the page, but this can be mitigated using libraries or AJAX</li>
<li>Forms have an &quot;action&quot; and &quot;method&quot; attribute to determine what type of request and where the request is going

<ul>
<li>Ex.
<code>
&lt;form action=&quot;/new-contact&quot; method=&quot;POST&quot;&gt;
...
&lt;/form&gt;
</code></li>
<li>Forms need some sort of server-side logic to handle the request from the client</li>
<li>The above example takes the user to /new-contact on the same origin</li>
<li>If the origin (domain + protocol + port) was http://flaviocopes.com, it will take you to http://flaviocopes.com/new-contact</li>
</ul></li>
<li>The data in the form is structured using <code>&lt;input&gt;</code> elements

<ul>
<li>There are a lot of types of input elements, but the most common ones are:

<ul>
<li>Text: <code>&lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;Your username&quot;&gt;</code></li>
<li>Email: <code>&lt;input type=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;Your email&quot;&gt;</code></li>
<li>Password: <code>&lt;input type=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;Your password&quot;&gt;</code></li>
</ul></li>
</ul></li>
<li>For form validation on the client side, one option is to add the &quot;required&quot; attribute to input elements that have to be filled out, or use the type of input to enforce a specific format

<ul>
<li>Ex. if input is of type &quot;email&quot; the browser checks that there is a properly formatted email before sending the request</li>
</ul></li>
</ul>
<h2 id='tables'>Tables</h2>
<ul>
<li>Define tables using <code>&lt;table&gt;</code> tag</li>
<li>Inside tables are <code>&lt;tr&gt;</code> tags for rows</li>
<li>Inside rows are <code>&lt;td&gt;</code> tags for columns</li>
<li>The first row can have header content which is different by using <code>&lt;th&gt;</code> tags for the columns</li>
<li>Ex.</li>
</ul>

<table>
  <tr>
    <th>Column 1</th>
    <th>Column 2</th>
    <th>Column 3</th>
  </tr>
  <tr>
    <td>Row 1 Column 1</td>
    <td>Row 1 Column 2</td>
    <td>Row 1 Column 3</td>
  </tr>
  <tr>
    <td>Row 2 Column 1</td>
    <td>Row 2 Column 2</td>
    <td>Row 2 Column 3</td>
  </tr>
</table>

<ul>
<li>Rows can span over multiple columns using the &quot;colspan&quot; attribute</li>
<li>Rows can span over multiple rows by using the &quot;rowspan&quot; attribute</li>
<li>Ex.</li>
</ul>

<table>
  <tr>
    <th>Column 1</th>
    <th>Column 2</th>
    <th>Column 3</th>
  </tr>
  <tr>
    <td colspan="2" rowspan="2">Rows 1-2 Columns 1-2</td>
    <td>Row 1 Column 3</td>
  </tr>
  <tr>
    <td>Row 2 Column 3</td>
  </tr>
</table>

<ul>
<li>For row headings, you can add a <code>&lt;th&gt;</code> tag to the first element inside a <code>&lt;tr&gt;</code> that is not the first <code>&lt;tr&gt;</code> of the table</li>
<li>Ex. </li>
</ul>

<table>
  <tr>
    <th></th>
    <th>Column 2</th>
    <th>Column 3</th>
  </tr>
  <tr>
    <th>Row 1</th>
    <td>Col 2</td>
    <td>Col 3</td>
  </tr>
  <tr>
    <th>Row 2</th>
    <td>Col 2</td>
    <td>Col 3</td>
  </tr>
</table>

<ul>
<li>Can have additional tags to organize the table:

<ul>
<li>thead</li>
<li>tbody</li>
<li>tfoot</li>
</ul></li>
<li>Ex.</li>
</ul>

<table>
  <thead>
    <tr>
      <th></th>
      <th>Column 2</th>
      <th>Column 3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Row 1</th>
      <td>Col 2</td>
      <td>Col 3</td>
    </tr>
    <tr>
      <th>Row 2</th>
      <td>Col 2</td>
      <td>Col 3</td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <td></td>
      <td>Footer of Col 1</td>
      <td>Footer of Col 2</td>
    </tr>
  </tfoot>
</table>

<ul>
<li>The <code>&lt;caption&gt;</code> element right after <code>&lt;table&gt;</code> can be used to give a caption to the table</li>
</ul>
<h2 id='multimedia-elements'>Multimedia Elements</h2>
<ul>
<li>You can have <code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code> elements to include audio and video clips</li>
<li>These have specific attributes such as &quot;controls&quot;, &quot;autoplay&quot;, &quot;loop&quot;, etc. to control the functionality of the multimedia when it loads</li>
</ul>
<h2 id='iframe'>Iframe</h2>
<ul>
<li>The iframe tag allows for embedding content from other sites into the document (other origins)</li>
<li>Creates a new nested browsing context, meaning anything in the iframe cannot leak towards the parent document</li>
<li>Ex. Codepen, Glitch, and other sites that allow you to code in one part of the page uses iframes.</li>
</ul>
<h2 id='images'>Images</h2>
<ul>
<li>Displayed using the <code>&lt;img&gt;</code> tag</li>
<li>Element accepts a &quot;src&quot; attribute that determines the image source

<ul>
<li>Can be any format for images</li>
<li>Ex. JPEG, PNG, GIF, SVG</li>
</ul></li>
<li>Requires an &quot;alt&quot; attribute for the alternate text that is shown if the image fails to load

<ul>
<li>Also used by SEO bots</li>
</ul></li>
</ul>
